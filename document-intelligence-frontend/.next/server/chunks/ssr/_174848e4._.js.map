{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ARUNI/Desktop/Document%20Intelligenence/document-intelligence-frontend/src/app/chat/%5BdocId%5D/page.jsx"],"sourcesContent":["'use client';\r\nimport { useParams } from 'next/navigation';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function ChatPage() {\r\n  const { docId } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [question, setQuestion] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [chatSessionId, setChatSessionId] = useState(null);\r\n\r\n  // Load saved session ID from localStorage on first render\r\n  useEffect(() => {\r\n    const storedSessionId = localStorage.getItem(`chat_session_${docId}`);\r\n    console.log(\"Loaded session from storage:\", storedSessionId);\r\n    if (storedSessionId) {\r\n      setChatSessionId(parseInt(storedSessionId));\r\n    }\r\n  }, [docId]);\r\n\r\n  // Load chat history when session ID is set\r\n  useEffect(() => {\r\n    const loadChatHistory = async () => {\r\n      if (!chatSessionId) return;\r\n\r\n      try {\r\n        const res = await fetch(`http://127.0.0.1:8000/api/chat-history/${chatSessionId}/`);\r\n        const data = await res.json();\r\n        setMessages(data);\r\n      } catch (err) {\r\n        console.error('Failed to load chat history:', err);\r\n      }\r\n    };\r\n\r\n    loadChatHistory();\r\n  }, [chatSessionId]);\r\n\r\n  const askQuestion = async () => {\r\n    if (!question.trim()) return;\r\n\r\n    const userMessage = { type: 'question', text: question };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await fetch('http://127.0.0.1:8000/api/ask-question/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          document_id: parseInt(docId),\r\n          question: question,\r\n          chat_session_id: chatSessionId,\r\n          top_k: 4,\r\n        }),\r\n      });\r\n\r\n     if (!res.ok) {\r\n  const errorText = await res.text();\r\n  console.error(\"API error response:\", res.status, errorText);\r\n  throw new Error('Failed to get answer');\r\n}\r\n\r\n\r\n      const data = await res.json();\r\n\r\n      // Save session ID to state and localStorage\r\n      if (!chatSessionId && data.chat_session_id) {\r\n        setChatSessionId(data.chat_session_id);\r\n        localStorage.setItem(`chat_session_${docId}`, data.chat_session_id);\r\n      }\r\n\r\n      console.log(\"API response:\", data);\r\nconsole.log(\"Sources type:\", typeof data.sources, Array.isArray(data.sources));\r\n\r\n     const botMessage = {\r\n        type: 'answer',\r\n      text: data.answer || 'No answer returned.',\r\n       sources: data.sources || [],\r\n};\r\n\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessages((prev) => [...prev, { type: 'answer', text: 'Error getting response.' }]);\r\n    } finally {\r\n      setLoading(false);\r\n      setQuestion('');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      askQuestion();\r\n    }\r\n  };\r\n\r\n  const clearChat = () => {\r\n    localStorage.removeItem(`chat_session_${docId}`);\r\n    setMessages([]);\r\n    setChatSessionId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-3xl mx-auto\">\r\n      <h1 className=\"text-xl font-bold mb-4\">Chat with Document #{docId}</h1>\r\n\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        <span className=\"text-sm text-gray-500\">\r\n          {chatSessionId ? `Session ID: ${chatSessionId}` : 'No session started'}\r\n        </span>\r\n        <button\r\n          onClick={clearChat}\r\n          className=\"text-sm text-red-600 hover:underline\"\r\n        >\r\n          Clear Chat\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"border rounded p-4 h-[400px] overflow-y-auto space-y-4 mb-4 bg-gray-50\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`p-2 rounded ${\r\n              msg.type === 'question' ? 'bg-pink-500 text-right' : 'bg-green-500 text-left'\r\n            }`}\r\n          >\r\n            <p>{msg.text}</p>\r\n             {/* Show sources under answer */}\r\n      {msg.type === 'answer'&& Array.isArray(msg.sources) && msg.sources && msg.sources.length > 0 && (\r\n      <div className=\"mt-1 text-xs text-gray-200\">\r\n        Sources:{' '}\r\n        {msg.sources.map((src, i) => (\r\n          <span key={i}>\r\n            Chunk #{src.chunk_index}\r\n            {src.page_number ? ` (Page ${src.page_number})` : ''}{' '}\r\n            {i < msg.sources.length - 1 ? 'Â· ' : ''}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    )}\r\n\r\n            \r\n\r\n          </div>\r\n        ))}\r\n        {loading && <p className=\"italic text-gray-500\">Generating answer...</p>}\r\n      </div>\r\n\r\n      <textarea\r\n        rows={2}\r\n        value={question}\r\n        onChange={(e) => setQuestion(e.target.value)}\r\n        onKeyDown={handleKeyDown}\r\n        className=\"w-full p-2 border rounded mb-2\"\r\n        placeholder=\"Type your question and press Enter...\"\r\n      />\r\n      <button\r\n        onClick={askQuestion}\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n        disabled={loading}\r\n      >\r\n        Ask\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS;IACtB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAC1B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,0DAA0D;IAC1D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB,aAAa,OAAO,CAAC,CAAC,aAAa,EAAE,OAAO;QACpE,QAAQ,GAAG,CAAC,gCAAgC;QAC5C,IAAI,iBAAiB;YACnB,iBAAiB,SAAS;QAC5B;IACF,GAAG;QAAC;KAAM;IAEV,2CAA2C;IAC3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB;YACtB,IAAI,CAAC,eAAe;YAEpB,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM,CAAC,uCAAuC,EAAE,cAAc,CAAC,CAAC;gBAClF,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,YAAY;YACd,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,gCAAgC;YAChD;QACF;QAEA;IACF,GAAG;QAAC;KAAc;IAElB,MAAM,cAAc;QAClB,IAAI,CAAC,SAAS,IAAI,IAAI;QAEtB,MAAM,cAAc;YAAE,MAAM;YAAY,MAAM;QAAS;QACvD,YAAY,CAAC,OAAS;mBAAI;gBAAM;aAAY;QAC5C,WAAW;QAEX,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,2CAA2C;gBACjE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,aAAa,SAAS;oBACtB,UAAU;oBACV,iBAAiB;oBACjB,OAAO;gBACT;YACF;YAED,IAAI,CAAC,IAAI,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,IAAI,IAAI;gBAChC,QAAQ,KAAK,CAAC,uBAAuB,IAAI,MAAM,EAAE;gBACjD,MAAM,IAAI,MAAM;YAClB;YAGM,MAAM,OAAO,MAAM,IAAI,IAAI;YAE3B,4CAA4C;YAC5C,IAAI,CAAC,iBAAiB,KAAK,eAAe,EAAE;gBAC1C,iBAAiB,KAAK,eAAe;gBACrC,aAAa,OAAO,CAAC,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,eAAe;YACpE;YAEA,QAAQ,GAAG,CAAC,iBAAiB;YACnC,QAAQ,GAAG,CAAC,iBAAiB,OAAO,KAAK,OAAO,EAAE,MAAM,OAAO,CAAC,KAAK,OAAO;YAEvE,MAAM,aAAa;gBAChB,MAAM;gBACR,MAAM,KAAK,MAAM,IAAI;gBACpB,SAAS,KAAK,OAAO,IAAI,EAAE;YAClC;YAEM,YAAY,CAAC,OAAS;uBAAI;oBAAM;iBAAW;QAC7C,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC;YACd,YAAY,CAAC,OAAS;uBAAI;oBAAM;wBAAE,MAAM;wBAAU,MAAM;oBAA0B;iBAAE;QACtF,SAAU;YACR,WAAW;YACX,YAAY;QACd;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB;QACF;IACF;IAEA,MAAM,YAAY;QAChB,aAAa,UAAU,CAAC,CAAC,aAAa,EAAE,OAAO;QAC/C,YAAY,EAAE;QACd,iBAAiB;IACnB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;;oBAAyB;oBAAqB;;;;;;;0BAE5D,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCACb,gBAAgB,CAAC,YAAY,EAAE,eAAe,GAAG;;;;;;kCAEpD,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;0BAKH,8OAAC;gBAAI,WAAU;;oBACZ,SAAS,GAAG,CAAC,CAAC,KAAK,oBAClB,8OAAC;4BAEC,WAAW,CAAC,YAAY,EACtB,IAAI,IAAI,KAAK,aAAa,2BAA2B,0BACrD;;8CAEF,8OAAC;8CAAG,IAAI,IAAI;;;;;;gCAEjB,IAAI,IAAI,KAAK,YAAW,MAAM,OAAO,CAAC,IAAI,OAAO,KAAK,IAAI,OAAO,IAAI,IAAI,OAAO,CAAC,MAAM,GAAG,mBAC3F,8OAAC;oCAAI,WAAU;;wCAA6B;wCACjC;wCACR,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,kBACrB,8OAAC;;oDAAa;oDACJ,IAAI,WAAW;oDACtB,IAAI,WAAW,GAAG,CAAC,OAAO,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,GAAG;oDAAI;oDACrD,IAAI,IAAI,OAAO,CAAC,MAAM,GAAG,IAAI,OAAO;;+CAH5B;;;;;;;;;;;;2BAXJ;;;;;oBAwBR,yBAAW,8OAAC;wBAAE,WAAU;kCAAuB;;;;;;;;;;;;0BAGlD,8OAAC;gBACC,MAAM;gBACN,OAAO;gBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gBAC3C,WAAW;gBACX,WAAU;gBACV,aAAY;;;;;;0BAEd,8OAAC;gBACC,SAAS;gBACT,WAAU;gBACV,UAAU;0BACX;;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ARUNI/Desktop/Document%20Intelligenence/document-intelligence-frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ARUNI/Desktop/Document%20Intelligenence/document-intelligence-frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}